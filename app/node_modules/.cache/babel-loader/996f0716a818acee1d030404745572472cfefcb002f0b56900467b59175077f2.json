{"ast":null,"code":"require('dotenv').config();\nconst dbConfig = {\n  user: process.env.DB_USER,\n  password: process.env.DB_PASSWORD,\n  host: process.env.DB_HOST,\n  port: process.env.DB_PORT,\n  database: process.env.DB_DATABASE\n};\nconst {\n  Pool\n} = require('pg');\nconst pool = new Pool(dbConfig);\nexport function conecta() {\n  pool.query('SELECT * FROM Estacionamento', (error, results) => {\n    if (error) {\n      console.error('Erro ao executar a consulta:', error);\n    } else {\n      console.log('Resultados da consulta:');\n      console.log(results.rows);\n    }\n  });\n\n  // Certifique-se de encerrar a pool de conexão quando terminar\n  pool.end(error => {\n    if (error) {\n      console.error('Erro ao encerrar a pool de conexão:', error);\n    } else {\n      console.log('Pool de conexão encerrada');\n    }\n  });\n}","map":{"version":3,"names":["require","config","dbConfig","user","process","env","DB_USER","password","DB_PASSWORD","host","DB_HOST","port","DB_PORT","database","DB_DATABASE","Pool","pool","conecta","query","error","results","console","log","rows","end"],"sources":["C:/Users/rafae/OneDrive/Área de Trabalho/Estacionamento/app/src/components/Service/controllers/server.js"],"sourcesContent":["require('dotenv').config();\r\n\r\nconst dbConfig = {\r\n  user: process.env.DB_USER,\r\n  password: process.env.DB_PASSWORD,\r\n  host: process.env.DB_HOST,\r\n  port: process.env.DB_PORT,\r\n  database: process.env.DB_DATABASE,\r\n};\r\nconst { Pool } = require('pg');\r\n\r\nconst pool = new Pool(dbConfig);\r\n\r\n\r\nexport function conecta(){\r\n\r\n\r\npool.query('SELECT * FROM Estacionamento', (error, results) => {\r\n  if (error) {\r\n    console.error('Erro ao executar a consulta:', error);\r\n  } else {\r\n        console.log('Resultados da consulta:');\r\n    console.log(results.rows);\r\n\r\n  }\r\n});\r\n\r\n// Certifique-se de encerrar a pool de conexão quando terminar\r\npool.end((error) => {\r\n  if (error) {\r\n    console.error('Erro ao encerrar a pool de conexão:', error);\r\n  } else {\r\n    console.log('Pool de conexão encerrada');\r\n  }\r\n});\r\n\r\n\r\n\r\n\r\n}\r\n\r\n \r\n  \r\n\r\n\r\n"],"mappings":"AAAAA,OAAO,CAAC,QAAQ,CAAC,CAACC,MAAM,CAAC,CAAC;AAE1B,MAAMC,QAAQ,GAAG;EACfC,IAAI,EAAEC,OAAO,CAACC,GAAG,CAACC,OAAO;EACzBC,QAAQ,EAAEH,OAAO,CAACC,GAAG,CAACG,WAAW;EACjCC,IAAI,EAAEL,OAAO,CAACC,GAAG,CAACK,OAAO;EACzBC,IAAI,EAAEP,OAAO,CAACC,GAAG,CAACO,OAAO;EACzBC,QAAQ,EAAET,OAAO,CAACC,GAAG,CAACS;AACxB,CAAC;AACD,MAAM;EAAEC;AAAK,CAAC,GAAGf,OAAO,CAAC,IAAI,CAAC;AAE9B,MAAMgB,IAAI,GAAG,IAAID,IAAI,CAACb,QAAQ,CAAC;AAG/B,OAAO,SAASe,OAAOA,CAAA,EAAE;EAGzBD,IAAI,CAACE,KAAK,CAAC,8BAA8B,EAAE,CAACC,KAAK,EAAEC,OAAO,KAAK;IAC7D,IAAID,KAAK,EAAE;MACTE,OAAO,CAACF,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACtD,CAAC,MAAM;MACDE,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;MAC1CD,OAAO,CAACC,GAAG,CAACF,OAAO,CAACG,IAAI,CAAC;IAE3B;EACF,CAAC,CAAC;;EAEF;EACAP,IAAI,CAACQ,GAAG,CAAEL,KAAK,IAAK;IAClB,IAAIA,KAAK,EAAE;MACTE,OAAO,CAACF,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC;IAC7D,CAAC,MAAM;MACLE,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;IAC1C;EACF,CAAC,CAAC;AAKF"},"metadata":{},"sourceType":"module","externalDependencies":[]}